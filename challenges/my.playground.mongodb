use('commerce');

// db.produtos.find();

// 1 - Retorne a quantidade de documentos inseridos na coleção produtos

// db.produtos.countDocuments({});

//2 - Ordene a coleção produtos pela quantidade de lanches vendidos
// em ordem crescente, mostrando apenas o nome e a quantidade de lanches vendidos

// db.produtos.find({},{_id: 0, nome: 1, vendidos: 1}).sort({vendidos: 1});

// 3 - Retorne o lanche mais vendido, mostrando apenas o nome e a
//  quantidade do lanche mais vendido

// db.produtos.find({},{_id: 0, nome: 1, vendidos: 1}).sort({vendidos: -1}).limit(1);

// 4 - Retorne os lanches que tiveram vendas maiores que 50 
// e menores que 100, mostrando apenas o nome e a quantidade 
// de lanches vendidos em ordem crescente

// db.produtos.find({$and:[{vendidos: {$gt: 50}}, {vendidos: {$lt: 100}}]}, {_id: 0, nome: 1, vendidos: 1}).sort({vendidos: 1});

// 5 - Retorne o nome, as curtidas e vendidos dos lanches que tiveram
// quantidade de curtidas igual a 36 ou tenham a quantidade de vendas
// igual a 85

// db.produtos.find({$or:[{curtidas: 36}, {vendidos: 85}]}, {_id: 0, nome: 1, curtidas: 1, vendidos: 1});

// 6 - Retorne o nome e as curtidas dos lanches que tiveram 
// curtidas maiores que 10 e menores que 100

// db.produtos.find({$and:[{curtidas: {$gt: 10}}, {curtidas: {$lt: 100}}]}, {_id: 0, nome: 1, curtidas: 1}).sort({vendidos: 1});

// 7 - Retorne o nome e vendidos dos lanches que tenham sido vendidos com uma quantidade
// diferente de 50 e em que o campo tags não exista

// db.produtos.find({$and:[{tags:{$exists: false}}, {vendidos:{$ne: 50}}]}, {_id: 0, nome: 1, vendidos: 1});  

// 8 - Delete os lanches com menos de 50 curtidas e retorne o nome dos lanches que restaram no banco

// db.produtos.deleteMany({curtidas: {$lt: 50}})
// db.produtos.find({}, {nome: 1, _id: 0})

// 9 - Retorne o nome de todos os lanches que possuam calorias
// abaixo de 500

// db.produtos.find({"valoresNutricionais.0.quantidade":{$lt: 500}}, {nome: 1, _id: 0});

// 10 - Retorne o nome de todos os lanches que tenham o percentual 
// de proteínas maior ou igual a 30 e menor ou igual a 40

// db.produtos.find({});

// db.produtos.find({"valoresNutricionais.3.percentual": {$gte: 30, $lte: 40}}, {nome: 1, _id: 0});

// 11 - Retorne o nome do produto, a quantidade de curtidas
// e quantos itens foram vendidos dos produtos que não sejam
// iguais a Big Mac e McChicken

// db.produtos.find({nome:{$nin: ["Big Mac", "McChicken"]}}, {nome: 1, _id: 0, curtidas: 1, vendidos: 1});

// 12 - Adicione ketchup aos ingredientes para todos os sanduíches menos o 
// McChicken, garantindo que não haja duplicidade nos ingredientes

// db.produtos.find({});
// db.produtos.updateMany({nome:{$ne: "McChicken"}}, {$addToSet:{ingredientes: "ketchup"}});

// db.produtos.find({}, { nome: 1, _id: 0, ingredientes: 1 });

// 13 - Inclua o campo criadoPor em todos os documentos, colocando Ronald 
// McDonald no valor desse campo

// db.produtos.updateMany({},{$set: {criadoPor: "Ronald McDonald"}});
// db.produtos.find({}, { nome: 1, _id: 0, criadoPor: 1 });

// 14 - Crie uma query que retorne todos os lanches que possuem picles em
// seus ingredientes e mostre apenas os 3 primeiros itens contidos no array
// valoresNutricionais

// db.produtos.find({ingredientes:{ $all: ["picles"]}},{_id: 0, nome: 1, ingredientes: 1, valoresNutricionais:{$slice: 3}});


// 15 - Adicione o campo avaliacao em todos os documentos da coleção e efetue
// alterações nesse campo

//    1. Crie uma query que inclua o campo avaliacao do tipo NumberInt, com 
   // o valor 0 em todos os documentos da coleção.

// db.produtos.updateMany({},{$set:{avaliacao: 0}});

//   // Crie uma query que incremente o valor do campo avaliacao em 5 em todos os 
//   // sanduíches de carne do tipo bovino. eyesDe olho na dica: utilize como filtro
//   // o campo tags.

// db.produtos.updateMany({tags:{$in: ["bovino"]}},{$set:{avaliacao: 5}});

//   // Crie uma query que incremente o valor do campo avaliacao em 3 em
//   //  todos os sanduíches de ave.

// db.produtos.updateMany({tags:{$in: ["ave"]}},{$set:{avaliacao: 3}});

// //Crie uma query que retorne o nome e avaliacao de todos os sanduíches.

// db.produtos.find({}, { nome: 1, _id: 0, avaliacao: 1 });

// 16 - Adicione o campo ultimaModificacao com a data corrente somente 
// no sanduíche Big Mac

// db.produtos.updateOne({nome: "Big Mac"}, {$currentDate:{ultimaModificacao: {$type: "date"}}});
// db.produtos.find({ultimaModificacao:{$exists: true}}, {_id: 0, nome: 1});

// 17 - Retorne a quantidade total de produtos em uma nova coleção chamada resumoProdutos

// Crie uma query que insira na coleção resumoProdutos um documento com os campos: franquia
// com o valor McDonalds e totalProdutos com o valor sendo a quantidade total de produtos 
// registrados na coleção produtos.

// db.resumoProdutos.insertOne({
//   franquia: "McDonalds",
//   totalProdutos: db.produtos.countDocuments({}),
// })

// db.resumoProdutos.find({}, {franquia: 1, totalProdutos: 1, _id: 0});

// 18 - Inclua bacon no final da lista de ingredientes dos sanduíches Big Mac e Quarteirão
// com Queijo

// db.produtos.updateMany({nome:{$in:["Big Mac", "Quarteirão com Queijo"]}}, {$addToSet:{ingredientes: "bacon"}})
// db.produtos.find({}, {nome: 1, ingredientes: 1, _id: 0});

// 19 - Remova o item cebola de todos os sanduíches

// db.produtos.updateMany({},{$pull:{ingredientes:"cebola"}});
// db.produtos.find({}, {nome: 1, ingredientes: 1, _id: 0});

//20 - Remova o primeiro ingrediente do sanduíche Quarteirão com Queijo

// db.produtos.updateOne({nome: "Quarteirão com Queijo"}, {$pop:{ingredientes: -1}});

// 21 - Remova o último ingrediente do sanduíche Cheddar McMelt

// db.produtos.updateOne({nome: "Cheddar McMelt"}, {$pop:{ingredientes: 1}});
// db.produtos.find({}, {nome: 1, ingredientes: 1, _id: 0});

//  22 - Adicione a quantidade de vendas dos sanduíches por dia da semana

db.produtos.updateMany({},{$set:{"vendasPorDia": [0, 0, 0, 0, 0, 0, 0]}});

// Crie uma query que incremente as vendas de Big Mac às quartas-feiras em 60.

db.produtos.updateMany({nome: "Big Mac"},{$inc:{"vendasPorDia.3": 60}});

// Crie uma query que incremente as vendas de todos os 
// sanduíches de carne do tipo bovino aos sábados em 120.

db.produtos.updateMany({ tags: { $in: ["bovino"] } }, { $set: { "vendasPorDia.6": 120 } });
db.produtos.find({}, { nome: 1, vendasPorDia: 1, _id: 0 });


// 30 - Remova o campo curtidas do item Big Mac

// db.produtos.updateOne({nome: "Big Mac"}, { $unset:{ curtidas: ""}});

// db.produtos.find({}, { nome: 1, vendasPorDia: 1, _id: 0 });
